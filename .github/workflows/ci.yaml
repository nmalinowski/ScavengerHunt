name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'backend/package-lock.json'
      - name: Install Backend Dependencies
        run: cd backend && npm install
      - name: Setup Environment Variables
        run: |
          echo "MONGO_URI=mongodb://localhost:27017/scavenger-hunt" > backend/.env
          echo "PORT=3000" >> backend/.env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> backend/.env
      - name: Lint Backend (Optional)
        run: cd backend && npm run lint
        if: hashFiles('backend/.eslintrc.json') != ''
      - name: Build Backend (TypeScript)
        run: cd backend && npm run build
      - name: Run Backend Tests
        run: cd backend && npm test
      - name: Build Backend Docker Image
        run: cd backend && docker build -t scavenger-hunt-backend:test .

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install Frontend Dependencies
        run: cd frontend && npm install
      - name: Lint Frontend (Optional)
        run: cd frontend && npm run lint
        if: hashFiles('frontend/.eslintrc.json') != ''
      - name: Run Frontend Tests
        run: cd frontend && npm test -- --watchAll=false
      - name: Build Frontend (Production)
        run: cd frontend && npm run build -- --configuration production
      - name: Build Frontend Docker Image
        run: cd frontend && docker build -t scavenger-hunt-frontend:test .

  integration:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Setup Environment Variables
        run: |
          echo "MONGO_URI=mongodb://mongo:27017/scavenger-hunt" > backend/.env
          echo "PORT=3000" >> backend/.env
          echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> backend/.env
      - name: Build and Run Docker Compose
        run: docker-compose up -d --build
      - name: Wait for Services
        run: sleep 10
      - name: Test Integration
        run: curl -f http://localhost || exit 1
      - name: Cleanup
        run: docker-compose down